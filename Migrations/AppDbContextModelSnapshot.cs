// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using spr21team24finalproject.DAL;

namespace spr21team24finalproject.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("spr21team24finalproject.Models.Album", b =>
                {
                    b.Property<int>("AlbumID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AlbumDiscountPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AlbumOriginalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("AlbumTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ArtistID")
                        .HasColumnType("int");

                    b.Property<int?>("GenreID")
                        .HasColumnType("int");

                    b.HasKey("AlbumID");

                    b.HasIndex("ArtistID");

                    b.HasIndex("GenreID");

                    b.ToTable("Albums");
                });

            modelBuilder.Entity("spr21team24finalproject.Models.AlbumOrderDetail", b =>
                {
                    b.Property<int>("AlbumOrderDetailID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AlbumID")
                        .HasColumnType("int");

                    b.Property<decimal>("AlbumPurchasePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AlbumTotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AlbumsOriginalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("OrderID")
                        .HasColumnType("int");

                    b.HasKey("AlbumOrderDetailID");

                    b.HasIndex("AlbumID");

                    b.HasIndex("OrderID");

                    b.ToTable("AlbumOrderDetails");
                });

            modelBuilder.Entity("spr21team24finalproject.Models.AlbumReview", b =>
                {
                    b.Property<int>("AlbumReviewID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AlbumComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AlbumID")
                        .HasColumnType("int");

                    b.Property<int>("AlbumRating")
                        .HasColumnType("int");

                    b.Property<int>("AlbumReviewStatusType")
                        .HasColumnType("int");

                    b.Property<int>("AlbumScoreCount")
                        .HasColumnType("int");

                    b.Property<int>("AlbumScoreSum")
                        .HasColumnType("int");

                    b.Property<string>("AppUserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("AlbumReviewID");

                    b.HasIndex("AlbumID");

                    b.HasIndex("AppUserId");

                    b.ToTable("AlbumReviews");
                });

            modelBuilder.Entity("spr21team24finalproject.Models.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("spr21team24finalproject.Models.Artist", b =>
                {
                    b.Property<int>("ArtistID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ArtistName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ArtistID");

                    b.ToTable("Artists");
                });

            modelBuilder.Entity("spr21team24finalproject.Models.ArtistReview", b =>
                {
                    b.Property<int>("ArtistReviewID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AppUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ArtistComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ArtistID")
                        .HasColumnType("int");

                    b.Property<int>("ArtistRating")
                        .HasColumnType("int");

                    b.Property<int>("ArtistReviewStatusType")
                        .HasColumnType("int");

                    b.Property<int>("ArtistScoreCount")
                        .HasColumnType("int");

                    b.Property<int>("ArtistScoreSum")
                        .HasColumnType("int");

                    b.HasKey("ArtistReviewID");

                    b.HasIndex("AppUserId");

                    b.HasIndex("ArtistID");

                    b.ToTable("ArtistReviews");
                });

            modelBuilder.Entity("spr21team24finalproject.Models.Genre", b =>
                {
                    b.Property<int>("GenreID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GenreName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GenreID");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("spr21team24finalproject.Models.Order", b =>
                {
                    b.Property<int>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AppUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreditCard")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Gift")
                        .HasColumnType("bit");

                    b.Property<string>("GiftRecipientEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderNumber")
                        .HasColumnType("int");

                    b.Property<int>("StatusType")
                        .HasColumnType("int");

                    b.HasKey("OrderID");

                    b.HasIndex("AppUserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("spr21team24finalproject.Models.Song", b =>
                {
                    b.Property<int>("SongID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AlbumID")
                        .HasColumnType("int");

                    b.Property<int?>("ArtistID")
                        .HasColumnType("int");

                    b.Property<int?>("GenreID")
                        .HasColumnType("int");

                    b.Property<decimal>("SongDiscountPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SongOriginalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SongTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SongID");

                    b.HasIndex("AlbumID");

                    b.HasIndex("ArtistID");

                    b.HasIndex("GenreID");

                    b.ToTable("Songs");
                });

            modelBuilder.Entity("spr21team24finalproject.Models.SongOrderDetail", b =>
                {
                    b.Property<int>("SongOrderDetailID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("OrderID")
                        .HasColumnType("int");

                    b.Property<int?>("SongID")
                        .HasColumnType("int");

                    b.Property<decimal>("SongOriginalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SongPurchasePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SongTotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("SongOrderDetailID");

                    b.HasIndex("OrderID");

                    b.HasIndex("SongID");

                    b.ToTable("SongOrderDetails");
                });

            modelBuilder.Entity("spr21team24finalproject.Models.SongReview", b =>
                {
                    b.Property<int>("SongReviewID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AppUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SongComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SongID")
                        .HasColumnType("int");

                    b.Property<int>("SongRating")
                        .HasColumnType("int");

                    b.Property<int>("SongRatingCount")
                        .HasColumnType("int");

                    b.Property<int>("SongRatingSum")
                        .HasColumnType("int");

                    b.Property<int>("SongReviewStatusType")
                        .HasColumnType("int");

                    b.HasKey("SongReviewID");

                    b.HasIndex("AppUserId");

                    b.HasIndex("SongID");

                    b.ToTable("SongReviews");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("spr21team24finalproject.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("spr21team24finalproject.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("spr21team24finalproject.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("spr21team24finalproject.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("spr21team24finalproject.Models.Album", b =>
                {
                    b.HasOne("spr21team24finalproject.Models.Artist", "Artist")
                        .WithMany("Albums")
                        .HasForeignKey("ArtistID");

                    b.HasOne("spr21team24finalproject.Models.Genre", "Genre")
                        .WithMany("Albums")
                        .HasForeignKey("GenreID");

                    b.Navigation("Artist");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("spr21team24finalproject.Models.AlbumOrderDetail", b =>
                {
                    b.HasOne("spr21team24finalproject.Models.Album", "Album")
                        .WithMany("AlbumOrderDetails")
                        .HasForeignKey("AlbumID");

                    b.HasOne("spr21team24finalproject.Models.Order", "Order")
                        .WithMany("AlbumOrderDetails")
                        .HasForeignKey("OrderID");

                    b.Navigation("Album");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("spr21team24finalproject.Models.AlbumReview", b =>
                {
                    b.HasOne("spr21team24finalproject.Models.Album", "Album")
                        .WithMany("AlbumReviews")
                        .HasForeignKey("AlbumID");

                    b.HasOne("spr21team24finalproject.Models.AppUser", "AppUser")
                        .WithMany("AlbumReviews")
                        .HasForeignKey("AppUserId");

                    b.Navigation("Album");

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("spr21team24finalproject.Models.ArtistReview", b =>
                {
                    b.HasOne("spr21team24finalproject.Models.AppUser", "AppUser")
                        .WithMany("ArtistReviews")
                        .HasForeignKey("AppUserId");

                    b.HasOne("spr21team24finalproject.Models.Artist", "Artist")
                        .WithMany("ArtistReviews")
                        .HasForeignKey("ArtistID");

                    b.Navigation("AppUser");

                    b.Navigation("Artist");
                });

            modelBuilder.Entity("spr21team24finalproject.Models.Order", b =>
                {
                    b.HasOne("spr21team24finalproject.Models.AppUser", "AppUser")
                        .WithMany("Orders")
                        .HasForeignKey("AppUserId");

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("spr21team24finalproject.Models.Song", b =>
                {
                    b.HasOne("spr21team24finalproject.Models.Album", "Album")
                        .WithMany("Songs")
                        .HasForeignKey("AlbumID");

                    b.HasOne("spr21team24finalproject.Models.Artist", "Artist")
                        .WithMany("Songs")
                        .HasForeignKey("ArtistID");

                    b.HasOne("spr21team24finalproject.Models.Genre", "Genre")
                        .WithMany("Songs")
                        .HasForeignKey("GenreID");

                    b.Navigation("Album");

                    b.Navigation("Artist");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("spr21team24finalproject.Models.SongOrderDetail", b =>
                {
                    b.HasOne("spr21team24finalproject.Models.Order", "Order")
                        .WithMany("SongOrderDetails")
                        .HasForeignKey("OrderID");

                    b.HasOne("spr21team24finalproject.Models.Song", "Song")
                        .WithMany("SongOrderDetails")
                        .HasForeignKey("SongID");

                    b.Navigation("Order");

                    b.Navigation("Song");
                });

            modelBuilder.Entity("spr21team24finalproject.Models.SongReview", b =>
                {
                    b.HasOne("spr21team24finalproject.Models.AppUser", "AppUser")
                        .WithMany("SongReviews")
                        .HasForeignKey("AppUserId");

                    b.HasOne("spr21team24finalproject.Models.Song", "Song")
                        .WithMany("SongReviews")
                        .HasForeignKey("SongID");

                    b.Navigation("AppUser");

                    b.Navigation("Song");
                });

            modelBuilder.Entity("spr21team24finalproject.Models.Album", b =>
                {
                    b.Navigation("AlbumOrderDetails");

                    b.Navigation("AlbumReviews");

                    b.Navigation("Songs");
                });

            modelBuilder.Entity("spr21team24finalproject.Models.AppUser", b =>
                {
                    b.Navigation("AlbumReviews");

                    b.Navigation("ArtistReviews");

                    b.Navigation("Orders");

                    b.Navigation("SongReviews");
                });

            modelBuilder.Entity("spr21team24finalproject.Models.Artist", b =>
                {
                    b.Navigation("Albums");

                    b.Navigation("ArtistReviews");

                    b.Navigation("Songs");
                });

            modelBuilder.Entity("spr21team24finalproject.Models.Genre", b =>
                {
                    b.Navigation("Albums");

                    b.Navigation("Songs");
                });

            modelBuilder.Entity("spr21team24finalproject.Models.Order", b =>
                {
                    b.Navigation("AlbumOrderDetails");

                    b.Navigation("SongOrderDetails");
                });

            modelBuilder.Entity("spr21team24finalproject.Models.Song", b =>
                {
                    b.Navigation("SongOrderDetails");

                    b.Navigation("SongReviews");
                });
#pragma warning restore 612, 618
        }
    }
}
